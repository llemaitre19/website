{"version":3,"file":"component---src-pages-projects-tsx-bd330c59bc2bea6d681a.js","mappings":"iNA4DA,UAjDA,SAAsBA,GACpB,MAAM,SAAEC,GAAaD,GACf,MAAEE,GAAUD,GACZ,EAAEE,IAAMC,EAAAA,EAAAA,kBACd,OACEC,EAAAA,cAACC,EAAAA,EAAM,CACLC,aAAcJ,EAAE,0BAChBK,aAAcL,EAAE,0BAChBM,aAAcP,GAASA,EAAMO,cAE7BJ,EAAAA,cAACK,EAAAA,EAAO,CACNC,GAAG,OACHC,MAAOT,EAAE,wBAETE,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAACQ,EAAAA,MAAK,CAACC,QAAQ,4BAA4BC,WAAY,CAAEC,KAAMX,EAAAA,cAACY,EAAAA,GAAa,UAE/EZ,EAAAA,cAAA,UACEA,EAAAA,cAACQ,EAAAA,MAAK,CAACC,QAAQ,2BAA2BC,WAAY,CAAEC,KAAMX,EAAAA,cAACa,EAAAA,GAAY,UAE7Eb,EAAAA,cAAA,UACEA,EAAAA,cAACQ,EAAAA,MAAK,CACJC,QAAQ,gCACRC,WAAY,CAAEC,KAAMX,EAAAA,cAACc,EAAAA,GAAa,YAK1Cd,EAAAA,cAACK,EAAAA,EAAO,CAACC,GAAG,UAAUC,MAAM,eAC1BP,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAACQ,EAAAA,MAAK,CAACC,QAAQ,0BAA0BC,WAAY,CAAEC,KAAMX,EAAAA,cAACe,EAAAA,GAAc,UAE9Ef,EAAAA,cAAA,UACGF,EAAE,kCAELE,EAAAA,cAAA,UACEA,EAAAA,cAACQ,EAAAA,MAAK,CACJC,QAAQ,8BACRC,WAAY,CAAEC,KAAMX,EAAAA,cAACgB,EAAAA,GAAe,YAOlD,EAYO,SAASC,EAAKtB,GACnB,OACEK,EAAAA,cAACkB,EAAAA,GAAG,CACFC,aAAaC,EAAAA,EAAAA,IAAsBzB,EAAO,WAAY,iBACtD0B,MAAMC,EAAAA,EAAAA,IAAwB3B,GAC9BY,OAAOa,EAAAA,EAAAA,IAAsBzB,EAAO,WAAY,kBAGtD,C","sources":["webpack://website/./src/pages/projects.tsx"],"sourcesContent":["import React from 'react';\nimport { HeadProps, graphql } from 'gatsby';\nimport { useTranslation, Trans } from 'react-i18next';\nimport Layout from '../components/Layout';\nimport { CustomPageProps } from '../types';\nimport Section from '../components/Section';\nimport {\n  EmacsLinkIcon, GatsbyLinkIcon, JtsxLinkIcon, WebsiteLinkIcon, MelpaLinkIcon,\n} from '../components/LinkIcons';\nimport SEO, { getLanguageFromHeadData, translateFromHeadData } from '../components/seo';\n\nfunction ProjectsPage(props: CustomPageProps) {\n  const { location } = props;\n  const { state } = location;\n  const { t } = useTranslation();\n  return (\n    <Layout\n      contentIntro={t('projects:content-intro')}\n      contentTitle={t('projects:content-title')}\n      currentTheme={state && state.currentTheme}\n    >\n      <Section\n        id=\"jtsx\"\n        title={t('projects:jtsx.title')}\n      >\n        <ul>\n          <li>\n            <Trans i18nKey=\"projects:jtsx.description\" components={{ comp: <EmacsLinkIcon /> }} />\n          </li>\n          <li>\n            <Trans i18nKey=\"projects:jtsx.repository\" components={{ comp: <JtsxLinkIcon /> }} />\n          </li>\n          <li>\n            <Trans\n              i18nKey=\"projects:jtsx.package-manager\"\n              components={{ comp: <MelpaLinkIcon /> }}\n            />\n          </li>\n        </ul>\n      </Section>\n      <Section id=\"website\" title=\"Ce site Web\">\n        <ul>\n          <li>\n            <Trans i18nKey=\"projects:website.gatsby\" components={{ comp: <GatsbyLinkIcon /> }} />\n          </li>\n          <li>\n            {t('projects:website.pre-rendered')}\n          </li>\n          <li>\n            <Trans\n              i18nKey=\"projects:website.repository\"\n              components={{ comp: <WebsiteLinkIcon /> }}\n            />\n          </li>\n        </ul>\n      </Section>\n    </Layout>\n  );\n}\n\nexport default ProjectsPage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      ...LocaleFragment\n    }\n  }\n`;\n\nexport function Head(props: HeadProps<any>) {\n  return (\n    <SEO\n      description={translateFromHeadData(props, 'projects', 'content-intro')}\n      lang={getLanguageFromHeadData(props)}\n      title={translateFromHeadData(props, 'projects', 'content-title')}\n    />\n  );\n}\n"],"names":["props","location","state","t","useTranslation","React","Layout","contentIntro","contentTitle","currentTheme","Section","id","title","Trans","i18nKey","components","comp","EmacsLinkIcon","JtsxLinkIcon","MelpaLinkIcon","GatsbyLinkIcon","WebsiteLinkIcon","Head","SEO","description","translateFromHeadData","lang","getLanguageFromHeadData"],"sourceRoot":""}